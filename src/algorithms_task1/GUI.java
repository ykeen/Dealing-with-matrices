/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algorithms_task1;

import edu.uci.ics.jung.algorithms.layout.CircleLayout;
import edu.uci.ics.jung.graph.DirectedSparseGraph;
import edu.uci.ics.jung.graph.UndirectedSparseGraph;
import edu.uci.ics.jung.visualization.VisualizationImageServer;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFrame;

/**
 *
 * @author Moaaz
 */
public class GUI extends javax.swing.JFrame {
        DirectedSparseGraph g = new DirectedSparseGraph();
        UndirectedSparseGraph ug = new UndirectedSparseGraph();
        
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        inputs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NumberOfVertices = new javax.swing.JTextField();
        nameVertice = new javax.swing.JTextField();
        NumberOfEdges = new javax.swing.JTextField();
        FromVerticeToVertice = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        Save = new javax.swing.JButton();
        Output = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        DirectedGraph = new javax.swing.JButton();
        UndirectedGraph = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        jScrollPane1.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter Number Of Vertices:");

        jLabel2.setText("Enter name Vertice:");

        jLabel3.setText("Enter Number Of Edges:");

        jLabel4.setText("Enter From Vertice To Vertice:");

        NumberOfVertices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberOfVerticesActionPerformed(evt);
            }
        });

        nameVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameVerticeActionPerformed(evt);
            }
        });

        NumberOfEdges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberOfEdgesActionPerformed(evt);
            }
        });

        FromVerticeToVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromVerticeToVerticeActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputsLayout = new javax.swing.GroupLayout(inputs);
        inputs.setLayout(inputsLayout);
        inputsLayout.setHorizontalGroup(
            inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputsLayout.createSequentialGroup()
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputsLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(inputsLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputsLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(45, 45, 45)))
                            .addGroup(inputsLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(78, 78, 78))))
                    .addGroup(inputsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FromVerticeToVertice, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(nameVertice, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NumberOfEdges, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NumberOfVertices, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputsLayout.createSequentialGroup()
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputsLayout.createSequentialGroup()
                        .addComponent(Save)
                        .addGap(151, 151, 151))))
        );
        inputsLayout.setVerticalGroup(
            inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputsLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(NumberOfVertices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NumberOfEdges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FromVerticeToVertice)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Save)
                .addGap(179, 179, 179))
        );

        jLabel5.setText("OutPut");

        DirectedGraph.setText("Directed Graph");
        DirectedGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectedGraphActionPerformed(evt);
            }
        });

        UndirectedGraph.setText("Undirected Graph");
        UndirectedGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndirectedGraphActionPerformed(evt);
            }
        });

        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        javax.swing.GroupLayout OutputLayout = new javax.swing.GroupLayout(Output);
        Output.setLayout(OutputLayout);
        OutputLayout.setHorizontalGroup(
            OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputLayout.createSequentialGroup()
                .addGroup(OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OutputLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(DirectedGraph)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UndirectedGraph)
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(OutputLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        OutputLayout.setVerticalGroup(
            OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addGroup(OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DirectedGraph)
                    .addComponent(UndirectedGraph))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumberOfVerticesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberOfVerticesActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_NumberOfVerticesActionPerformed
 
    private void nameVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameVerticeActionPerformed
        // TODO add your handling code here:
        
            
     
    }//GEN-LAST:event_nameVerticeActionPerformed

    private void NumberOfEdgesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberOfEdgesActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NumberOfEdgesActionPerformed

    private void FromVerticeToVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromVerticeToVerticeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_FromVerticeToVerticeActionPerformed

    private void DirectedGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectedGraphActionPerformed
        // TODO add your handling code here:
        
        VisualizationImageServer vss = new VisualizationImageServer(new CircleLayout(g), new Dimension(400,400));
        JFrame frame = new JFrame("Task 1");
        // To Show directed graph replace vs -> vss 
        frame.getContentPane().add(vss);
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_DirectedGraphActionPerformed

    private void UndirectedGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndirectedGraphActionPerformed
        // TODO add your handling code here:
       
        VisualizationImageServer vs = new VisualizationImageServer(new CircleLayout(ug), new Dimension(400,400));
        JFrame frame = new JFrame("Task 1");
        // To Show directed graph replace vs -> vss 
        frame.getContentPane().add(vs);
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_UndirectedGraphActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        Scanner input = new Scanner(System.in);
        Matrices m = new Matrices();
        boolean direct = true ;
        int v, e , from , to;
        String name   , edges ;
        
       
        NumberOfVertices.selectAll();
        v = Integer.parseInt(NumberOfVertices.getText());
        name  = nameVertice.getText();
                    
        String [] NameOfVertices = new String[v];
        NameOfVertices = name.split(" ");
             
        boolean [][] adjMatrix =  new boolean[v][v] ;
        boolean [][] unadjMatrix =  new boolean[v][v] ;
         

           for (int i = 0; i < v ; i++) {
              System.out.println(NameOfVertices[i]);
              g.addVertex(NameOfVertices[i]);
              ug.addVertex(NameOfVertices[i]);
           }
         e = Integer.parseInt(NumberOfEdges.getText());
         String [] Edges = new String[e];
        edges  = FromVerticeToVertice.getText();
        Edges = edges.split("-");
        
        for (int j=0 ; j<Edges.length ; j+=2){
            int From , To;
               
                   From = Edges[j].charAt(0) ;
                   To = Edges[j+1].charAt(0);
                   from = (int)From- 65;
                   to = (int)To- 65;
         
               System.out.println("From  = " + from + "   To  =" +to);
                adjMatrix[from][to] = true;
                unadjMatrix[from][to] = true;
                unadjMatrix[to][from] = true;
                g.addEdge("Edge"+j,from,to);
                ug.addEdge("Edge"+j,from,to);
        }
        String res = "";
        res += m.printAdjMatrix(adjMatrix);
        res += m.printAdjList(adjMatrix);
        res += m.printAdjMatrix(unadjMatrix);
        res += m.printAdjList(unadjMatrix);
        output.setText(res);
    }//GEN-LAST:event_SaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DirectedGraph;
    private javax.swing.JTextField FromVerticeToVertice;
    private javax.swing.JTextField NumberOfEdges;
    private javax.swing.JTextField NumberOfVertices;
    private javax.swing.JPanel Output;
    private javax.swing.JButton Save;
    private javax.swing.JButton UndirectedGraph;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel inputs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField nameVertice;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
}
